#!/bin/bash -l

# Install sshpass
apt-get update -y
apt-get install -y sshpass
export SSHPASS=Passw0rd!
echo "export SSHPASS=Passw0rd!" >> /root/.bashrc

# Create Nomad Server
gcloud compute instances create nomad-server-1 --image-project=instruqt-hashicorp --image=windows-hashistack-0-13-1 --zone=europe-west1-b --tags=nomad --machine-type=n1-standard-1

# Create Nomad Client 1
gcloud compute instances create nomad-client-1 --image-project=instruqt-hashicorp --image=windows-hashistack-0-13-1 --zone=europe-west1-b --tags=nomad --machine-type=n1-standard-2

# Create Nomad Client 2
gcloud compute instances create nomad-client-2 --image-project=instruqt-hashicorp --image=windows-hashistack-0-13-1 --zone=europe-west1-b --tags=nomad --machine-type=n1-standard-2

# Create Nomad Client 3
gcloud compute instances create nomad-client-3 --image-project=instruqt-hashicorp --image=windows-hashistack-0-13-1 --zone=europe-west1-b --tags=nomad --machine-type=n1-standard-2

# Sleep
sleep 60

# Create Firewall Rules for Consul
gcloud compute firewall-rules create consul-allow-inbound-http --allow tcp:8500
gcloud compute firewall-rules create consul-allow-inbound-dns --allow tcp:8600 --allow udp:8600
gcloud compute firewall-rules create consul-allow-inbound-rpc --allow tcp:8300 --source-tags=nomad --target-tags=nomad
gcloud compute firewall-rules create consul-allow-inbound-lan-serf --allow tcp:8301 --allow udp:8301 --source-tags=nomad --target-tags=nomad
gcloud compute firewall-rules create consul-allow-inbound-wan-serf --allow tcp:8302 --allow udp:8302 --source-tags=nomad --target-tags=nomad

# Create Firewall Rules for Nomad
gcloud compute firewall-rules create nomad-allow-inbound-http --allow tcp:4646
gcloud compute firewall-rules create nomad-allow-inbound-rpc --allow tcp:4647 --source-tags=nomad --target-tags=nomad
gcloud compute firewall-rules create nomad-allow-inbound-serf --allow tcp:4648 --allow udp:4648 --source-tags=nomad --target-tags=nomad

# Create Firewall Rule for IIS
gcloud compute firewall-rules create iis-allow-inbound-http --allow tcp:8000

# Export public IP of nomad-server-1
export nomad_server_ip=$(gcloud compute instances list | grep nomad-server-1 | cut -d' ' -f23)
echo "export nomad_server_ip=$nomad_server_ip" >> /root/.bashrc

# Export public IP of nomad-client-1
export nomad_client_1_ip=$(gcloud compute instances list | grep nomad-client-1 | cut -d' ' -f23)
echo "export nomad_client_1_ip=$nomad_client_1_ip" >> /root/.bashrc

# Export public IP of nomad-client-2
export nomad_client_2_ip=$(gcloud compute instances list | grep nomad-client-2 | cut -d' ' -f23)
echo "export nomad_client_2_ip=$nomad_client_2_ip" >> /root/.bashrc

# Export public IP of nomad-client-3
export nomad_client_3_ip=$(gcloud compute instances list | grep nomad-client-3 | cut -d' ' -f23)
echo "export nomad_client_3_ip=$nomad_client_3_ip" >> /root/.bashrc

# Export private IP of nomad-server-1
export nomad_server_private_ip=$(gcloud compute instances list | grep nomad-server-1 | cut -d' ' -f20)
echo "export nomad_server_private_ip=$nomad_server_private_ip" >> /root/.bashrc

# Export private IP of nomad-client-1
export nomad_client_1_private_ip=$(gcloud compute instances list | grep nomad-client-1 | cut -d' ' -f20)
echo "export nomad_client_1_private_ip=$nomad_client_1_private_ip" >> /root/.bashrc

# Export private IP of nomad-client-2
export nomad_client_2_private_ip=$(gcloud compute instances list | grep nomad-client-2 | cut -d' ' -f20)
echo "export nomad_client_2_private_ip=$nomad_client_2_private_ip" >> /root/.bashrc

# Export private IP of nomad-client-3
export nomad_client_3_private_ip=$(gcloud compute instances list | grep nomad-client-3 | cut -d' ' -f20)
echo "export nomad_client_3_private_ip=$nomad_client_3_private_ip" >> /root/.bashrc

# Add Nomad server and clients to known hosts file
ssh-keyscan -H $nomad_server_ip >> ~/.ssh/known_hosts
ssh-keyscan -H $nomad_client_1_ip >> ~/.ssh/known_hosts
ssh-keyscan -H $nomad_client_2_ip >> ~/.ssh/known_hosts
ssh-keyscan -H $nomad_client_3_ip >> ~/.ssh/known_hosts

# Create /root/nomad on Cloud Client
mkdir /root/nomad

# Disable Windows firewall on all 4 VMs
sshpass -e ssh hashistack@$nomad_server_ip 'netsh advfirewall set allprofiles state off'
sshpass -e ssh hashistack@$nomad_client_1_ip 'netsh advfirewall set allprofiles state off'
sshpass -e ssh hashistack@$nomad_client_2_ip 'netsh advfirewall set allprofiles state off'
sshpass -e ssh hashistack@$nomad_client_3_ip 'netsh advfirewall set allprofiles state off'


### Server
# Write Consul Server Config
cat <<-EOF > /root/nomad/consul-server1.json
{
  "server": true,
  "ui": true,
  "log_file": "c:\\\\Users\\\\hashistack\\\\consul\\\\consul.log",
  "log_level": "INFO",
  "data_dir": "c:\\\\Users\\\\hashistack\\\\consul\\\\data\\\\",
  "node_name": "server1",
  "bind_addr": "$nomad_server_private_ip",
  "client_addr": "0.0.0.0",
  "bootstrap_expect": 1
}
EOF

# SCP Consul Config File to nomad-server-1
sshpass -e scp /root/nomad/consul-server1.json hashistack@$nomad_server_ip:c:\\Users\\hashistack\\consul\\consul-server1.json

# Make Consul data directory
sshpass -e ssh hashistack@$nomad_server_ip 'mkdir c:\Users\hashistack\consul\data'

# Start Consul on Server
sshpass -e ssh hashistack@$nomad_server_ip 'sc start Consul'

# Sleep
sleep 15

# Write Nomad Server Config
cat <<-EOF > /root/nomad/nomad-server1.hcl
# Setup data dir
data_dir = "c:\\\\Users\\\\hashistack\\\\nomad\\\\data\\\\"

# Give the agent a unique name.
name = "server1"

# Enable the server
server {
  enabled = true
  bootstrap_expect = 1
}

# Consul configuration
consul {
  address = "nomad-server-1:8500"
}

log_file = "c:\\\\Users\\\\hashistack\\\\nomad\\\\nomad.log"
EOF

# SCP Nomad Config File to nomad-server-1
sshpass -e scp /root/nomad/nomad-server1.hcl hashistack@$nomad_server_ip:c:\\Users\\hashistack\\nomad\\nomad-server1.hcl

# Make Nomad data directory
sshpass -e ssh hashistack@$nomad_server_ip 'mkdir c:\Users\hashistack\nomad\data'

# Start Nomad on Server
sshpass -e ssh hashistack@$nomad_server_ip 'sc start Nomad'

# Start Docker in case it was not started
# sshpass -e ssh hashistack@$nomad_server_ip 'sc start Docker'

### Client 1
# Write Consul Client Config
cat <<-EOF > /root/nomad/consul-client1.json
{
  "log_file": "c:\\\\Users\\\\hashistack\\\\consul\\\\consul.log",
  "log_level": "INFO",
  "data_dir": "c:\\\\Users\\\\hashistack\\\\consul\\\\data\\\\",
  "node_name": "client1",
  "bind_addr": "$nomad_client_1_private_ip",
  "client_addr": "0.0.0.0",
  "retry_join": [
    "nomad-server-1"
  ]
}
EOF

# SCP Consul Config File to Nomad client
sshpass -e scp /root/nomad/consul-client1.json hashistack@$nomad_client_1_ip:c:\\Users\\hashistack\\consul\\consul-client1.json

# Make Consul data directory
sshpass -e ssh hashistack@$nomad_client_1_ip 'mkdir c:\Users\hashistack\consul\data'

# Start Consul on Client
sshpass -e ssh hashistack@$nomad_client_1_ip 'sc start Consul'

# Sleep
sleep 15

# Write Nomad Client Config
cat <<-EOF > /root/nomad/nomad-client1.hcl
# Setup data dir
data_dir = "c:\\\\Users\\\\hashistack\\\\nomad\\\\data\\\\"

# Give the agent a unique name.
name = "client1"

# Enable the client
client {
  enabled = true
}

# Consul configuration
consul {
  address = "nomad-client-1:8500"
}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

plugin "docker" {
  config {
    pull_activity_timeout = "15m"
  }
}

log_file = "c:\\\\Users\\\\hashistack\\\\nomad\\\\nomad.log"
EOF

# SCP Nomad Config File to Client
sshpass -e scp /root/nomad/nomad-client1.hcl hashistack@$nomad_client_1_ip:c:\\Users\\hashistack\\nomad\\nomad-client1.hcl

# Make Nomad data directory
sshpass -e ssh hashistack@$nomad_client_1_ip 'mkdir c:\Users\hashistack\nomad\data'

# Start Nomad on Client
sshpass -e ssh hashistack@$nomad_client_1_ip 'sc start Nomad'

# Start Docker in case it was not started
# sshpass -e ssh hashistack@$nomad_client_1_ip 'sc start Docker'

### Client 2
# Write Consul Client Config
cat <<-EOF > /root/nomad/consul-client2.json
{
  "log_file": "c:\\\\Users\\\\hashistack\\\\consul\\\\consul.log",
  "log_level": "INFO",
  "data_dir": "c:\\\\Users\\\\hashistack\\\\consul\\\\data\\\\",
  "node_name": "client2",
  "bind_addr": "$nomad_client_2_private_ip",
  "client_addr": "0.0.0.0",
  "retry_join": [
    "nomad-server-1"
  ]
}
EOF

# SCP Consul Config File to Nomad client
sshpass -e scp /root/nomad/consul-client2.json hashistack@$nomad_client_2_ip:c:\\Users\\hashistack\\consul\\consul-client2.json

# Make Consul data directory
sshpass -e ssh hashistack@$nomad_client_2_ip 'mkdir c:\Users\hashistack\consul\data'

# Start Consul on Client
sshpass -e ssh hashistack@$nomad_client_2_ip 'sc start Consul'

# Sleep
sleep 15

# Write Nomad Client Config
cat <<-EOF > /root/nomad/nomad-client2.hcl
# Setup data dir
data_dir = "c:\\\\Users\\\\hashistack\\\\nomad\\\\data\\\\"

# Give the agent a unique name.
name = "client2"

# Enable the client
client {
  enabled = true
}

# Consul configuration
consul {
  address = "nomad-client-2:8500"
}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

plugin "docker" {
  config {
    pull_activity_timeout = "15m"
  }
}

log_file = "c:\\\\Users\\\\hashistack\\\\nomad\\\\nomad.log"
EOF

# SCP Nomad Config File to Client
sshpass -e scp /root/nomad/nomad-client2.hcl hashistack@$nomad_client_2_ip:c:\\Users\\hashistack\\nomad\\nomad-client2.hcl

# Make Nomad data directory
sshpass -e ssh hashistack@$nomad_client_2_ip 'mkdir c:\Users\hashistack\nomad\data'

# Start Nomad on Client
sshpass -e ssh hashistack@$nomad_client_2_ip 'sc start Nomad'

# Start Docker in case it was not started
# sshpass -e ssh hashistack@$nomad_client_2_ip 'sc start Docker'

### Client 3
# Write Consul Client Config
cat <<-EOF > /root/nomad/consul-client3.json
{
  "log_file": "c:\\\\Users\\\\hashistack\\\\consul\\\\consul.log",
  "log_level": "INFO",
  "data_dir": "c:\\\\Users\\\\hashistack\\\\consul\\\\data\\\\",
  "node_name": "client3",
  "bind_addr": "$nomad_client_3_private_ip",
  "client_addr": "0.0.0.0",
  "retry_join": [
    "nomad-server-1"
  ]
}
EOF

# SCP Consul Config File to Nomad client
sshpass -e scp /root/nomad/consul-client3.json hashistack@$nomad_client_3_ip:c:\\Users\\hashistack\\consul\\consul-client3.json

# Make Consul data directory
sshpass -e ssh hashistack@$nomad_client_3_ip 'mkdir c:\Users\hashistack\consul\data'

# Start Consul on Client
sshpass -e ssh hashistack@$nomad_client_3_ip 'sc start Consul'

# Sleep
sleep 15

# Write Nomad Client Config
cat <<-EOF > /root/nomad/nomad-client3.hcl
# Setup data dir
data_dir = "c:\\\\Users\\\\hashistack\\\\nomad\\\\data\\\\"

# Give the agent a unique name.
name = "client3"

# Enable the client
client {
  enabled = true
}

# Consul configuration
consul {
  address = "nomad-client-3:8500"
}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

plugin "docker" {
  config {
    pull_activity_timeout = "15m"
  }
}

log_file = "c:\\\\Users\\\\hashistack\\\\nomad\\\\nomad.log"
EOF

# SCP Nomad Config File to Client
sshpass -e scp /root/nomad/nomad-client3.hcl hashistack@$nomad_client_3_ip:c:\\Users\\hashistack\\nomad\\nomad-client3.hcl

# Make Nomad data directory
sshpass -e ssh hashistack@$nomad_client_3_ip 'mkdir c:\Users\hashistack\nomad\data'

# Start Nomad on Client
sshpass -e ssh hashistack@$nomad_client_3_ip 'sc start Nomad'

# Start Docker in case it was not started
# sshpass -e ssh hashistack@$nomad_client_3_ip 'sc start Docker'

# Sleep
sleep 45

exit 0
