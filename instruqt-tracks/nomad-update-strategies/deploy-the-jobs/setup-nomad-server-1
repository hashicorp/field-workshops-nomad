#!/bin/bash -l

set -e

mkdir /root/nomad/jobs

# Write the mongodb.nomad job
cat <<-EOF > /root/nomad/jobs/mongodb.nomad
job "mongodb" {
  datacenters = ["dc1"]
  type = "service"

  group "db" {
    count = 1

    volume "mongodb_vol" {
      type = "host"
      source = "mongodb_mount"
    }

    network {
      mode = "bridge"
    }

    task "mongodb" {
      driver = "docker"

      config {
        image = "mongo"
      }

      volume_mount {
        volume = "mongodb_vol"
        destination = "/data/db"
      }

      resources {
        cpu = 500 # MHz
        memory = 512 # MB
      }

    } # end mongodb task

    service {
      name = "mongodb"
      tags = ["mongodb"]
      port = "27017"

      connect {
        sidecar_service {}
      }
    } # end service

  } # end db group

}
EOF

cat <<-EOF > /root/nomad/jobs/nginx.nomad
job "nginx" {
  datacenters = ["dc1"]
  type = "system"

  group "nginx" {

    task "nginx" {
      driver = "docker"

      config {
        image = "nginx"

        port_map {
          http = 80
        }

        volumes = [
          "local:/etc/nginx/conf.d",
        ]
      }

      template {
        data = <<EOT
upstream chat {
  # enable sticky session based on IP
  #ip_hash;
{{ range service "chat-app" }}
  server {{ .Address }}:{{ .Port }};
{{ else }}server 127.0.0.1:65535; # force a 502
{{ end }}
}

server {
  listen 80;

  location / {
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header Host \$host;
    proxy_pass http://chat;

    # enable WebSockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location /chat/ {
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header Host \$host;
    proxy_pass http://chat;

    # enable WebSockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
  }

   location  /socket.io/ {
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header Host \$host;
    proxy_pass http://chat;

    # enable WebSockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
EOT

        destination   = "local/load-balancer.conf"
        change_mode   = "signal"
        change_signal = "SIGHUP"
      }

      resources {
        network {
          mbits = 10

          port "http" {
            static = 8080
          }
        }
      }

      service {
        name = "nginx"
        tags = ["nginx"]
        port = "http"
        check {
          name     = "nginx alive"
          type     = "http"
          path     = "/chat/chats"
          interval = "10s"
          timeout  = "2s"
        }
      }
    }
  }
}
EOF

# Write the chat-app-light-binary.nomad job
cat <<-EOF > /root/nomad/jobs/chat-app-light-binary.nomad
job "chat-app" {
  datacenters = ["dc1"]
  type = "service"

  group "chat-app" {
    count = 3

    spread {
      attribute = "\${node.unique.name}"
    }

    update {
      max_parallel = 1
      health_check = "checks"
      min_healthy_time = "15s"
      healthy_deadline = "2m"
    }

    network {
      mode = "bridge"
      port "http" {
        to = 5000
      }
    }

    task "chat-app" {
      driver = "exec"

      config {
        command = "chatapp-light-linux"
      }

      artifact {
        source = "https://github.com/GuyBarros/anonymouse-realtime-chat-app/releases/download/0.03/chatapp-light-linux"
        options {
          checksum = "md5:55677699984200530a836cf8fdec5bb5"
        }
      }

      env {
        MONGODB_SERVER = "127.0.0.1"
        MONGODB_PORT = "27017"
      }

      resources {
        cpu = 300 # MHz
        memory = 512 # MB
      }

    } # end chat-app task

    service {
      name = "chat-app"
      tags = ["chat-app"]
      port = "http"
      check {
        name     = "chat-app alive"
        type     = "http"
        path     = "/chats"
        interval = "10s"
        timeout  = "2s"
      }

      connect {
        sidecar_service {
          tags = ["chat-app-proxy"]
          proxy {
            upstreams {
              destination_name = "mongodb"
              local_bind_port = 27017
            }
          }
        }
      } # end connnect
    } # end service

  } # end chat-app group

}
EOF

exit 0
